name: auto-doc

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Temp input for workflow to run adhoc'
        required: false
        default: 'Ignore this field'

  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.py'
      - '.github/**'


jobs:
  auto-doc:
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content to github runner

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7.7' # install the python version needed
          
      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install jinja2

      - name: Get auto-doc script
        id: auto-doc-script
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://raw.githubusercontent.com/ciscomanagedservices/sxo-autodoc/main/.github/auto-doc.py"
          method: 'GET'

      - name: Write auto-doc script
        run: printf $${{ steps.auto-doc-script.outputs.response }} > .github/auto-doc.py

      - name: Create template Directory if does not exist
        run: mkdir -p .github/templates

      - name: Get sample template
        id: sample-template
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://raw.githubusercontent.com/ciscomanagedservices/sxo-autodoc/main/.github/templates/sample_template.md"
          method: 'GET'

      - name: Write sample-template
        run: |
          line=$(echo $${{ steps.sample-template.outputs.response }} | sed -r 's/%/%%/g')
          printf -- "$line" >> .github/templates/sample_template.md
          
      - name: execute py script # run sj-gobierno.py to get the latest data
        run: python .github/auto-doc.py $GITHUB_WORKSPACE
          
      - name: commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Regenerating README after last commit"
          
      - name: push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main  
